	.PAGE
	.TITLE STAR TREK DEBUG (STREK)
	.SBTTL MAIN SECTION WITH ALPHA & MOTION TESTS
	;REVISED 28-OCT-76
	;NOTE BIT 6 OF SYNC MUST BE SET TO 1 INITIALLY BY NOT GROUNDING
	.ASECT
	.=20001
	.LIST MEB
	.NLIST TTM
	INDLO=0
	INDHI = 1
	MSADR = 2
	TSTCNT = 3
	BUTCNT = 4
	COUNT = 5
	BUTSTS = 6
	MOVPOS = 7
	TESTNO = 10
	ALFNUM = 12	;SWITCH = B000100 (=X40)
	MOVNUM = 14	;SWITCH = B001000 (=X80)
	T3 = 27
	LITEST = 100	;=X80 TEST PANEL LIGHTS
	ANRAM = 144000
	ANRAM1 = 144000
	ANRAML = 144240
	ANRAMC = 144260
	ANRAM2 = 144400
	SWITCH = 110000
	LIGHTS = 110000
	MUX = 156006
	SYNC = 130000
	VPOS = 150000
	HPOS = 146000
	GR = 152000
	DGOUT1 = 156000
	DGOUT2 = 156100
	DGOUT3 = 157000
	CIRBLK = 156002	;CIRCLE BLANK
	SFKILL = 156003
	AUDOUT = 157000
	SHPSIZ = 157401
	;*****PRINTS (MESSAGE NUMBER), POSITION OPTION
	.MACRO PRINT M,X
	.IF B,X
	LDA I,M&377
	STA Z,INDLO
	LDA I,M/400
	STA Z,INDHI
	JSR ADDMES
	.MEXIT
	.ENDC
	LDA I,M&377
	STA Z,INDLO
	LDA I,M/400
	STA Z,INDHI
	LDX I,X
	JSR NEWMES
	.ENDM
;*************************
START:	CLD
	LDX I,377
	TXS
	LDA I,0
	LDX I,17
1$:	STA AX,DGOUT1	;ZERO OUTPUT PORTS
	STA AX,DGOUT2
	STA AX,DGOUT3
	DEX
	BPL 1$
	LDA I,1
	STA A,MUX
	LDA I,0
	STA Z,LITEST	;INITIALIZE TEST PANEL TO ZEROES
	STA A,LIGHTS
	STA Z,BUTCNT
	STA A,CIRBLK	;TURN OFF CIRCLE
	LDA I,1
	STA A,AUDOUT	;TURN OFF SOUND
	STA A,SFKILL	;KILL STARFIELD
	;************SET VPOS FOR EACH OBJECT TO MOVE OFF SCREEN
	LDA I,377
	LDX I,17
2$:	STA AX,VPOS
	DEX
	BPL 2$
	LDA I,100	;=BIT 6
	STA Z,BUTSTS
	NOP
	NOP
	NOP
SWITST:	LDA I,1
	STA Z,TSTCNT
	BIT A,SWITCH
	BEQ 1$
	JMP RAMTST
1$:	ASL
	BIT A,SWITCH
	BEQ 2$
	JMP ROMTST
2$:	ASL
	BIT A,SWITCH
	BEQ 3$
	JMP ALFTST
3$:	ASL
	INC Z,TSTCNT
	BIT A,SWITCH
	BEQ 4$
	JMP MOVTST
4$:	ASL
	INC Z,TSTCNT
	BIT A,SWITCH
	BEQ 5$
	JMP AUDTST
5$:	ASL
	INC Z,TSTCNT
	BIT A,SWITCH
	BEQ 6$
	JMP ANLTST
6$:	LDA I,0
	STA Z,TSTCNT
	JMP DIGTST
DIGTST:	LDA I,DIGBUT&377	;****ROUTINES TO CHECK DIGITAL OUTPUT PORTS
	STA Z,TESTNO
	LDA I,DIGBUT/400
	STA Z,TESTNO+1
DIGGEN:	JSR WAITSN
	JMP N,TESTNO
DIGBUT:	JSR DIGON
	JMP 1$
	JSR DIGOFF
	JMP 1$
	JSR SWITST
1$:	JSR BUTTST
	JMP DIGGEN
DIGON:	LDA I,1
	LDX I,17
1$:	STA AX,DGOUT1
	STA AX,DGOUT2
	STA AX,DGOUT3
	DEX
	BPL 1$
	PRINT MSG0,100
	RTS
DIGOFF:	LDA I,0
	LDX I,17
1$:	STA AX,DGOUT1
	STA AX,DGOUT2
	STA AX,DGOUT3
	DEX
	BPL 1$
	LDA I,1	;RESET STARFIELD KILL
	STA A,SFKILL
	PRINT MSG01,100
	PRINT MSG3,205
	RTS
MSG01:	.ASCIZ/DIGITAL OUTPUT PORTS ZEROED/
RAMTST:	LDX I,0	;********ROUTINE TO CHECK OUT ZERO PAGE RAM
1$:	LDA I,0	
	STA ZX,0
	CMP ZX,0
	BNE BADRAM
	LDA I,377
	STA ZX,0
	CMP ZX,0
	BNE BADRAM
	DEX
	BNE 1$
	LDA I,1
	STA A,LIGHTS	;=X9000
	STA Z,LITEST
	JMP SWITST
BADRAM:	LDA I,0
	STA Z,LITEST
	STA A,LIGHTS
	JMP SWITST
CHKSUM:	.BYTE ^H2E
ROMTST:	LDY I,0	;***************ROUTINE TO CHECK OUT ROM
	STY Z,INDLO
	LDY I,54	;=X2C (FIRST PAGE OF ROM)
	STY Z,INDHI
	LDY I,0
	LDA I,0
2$:	CLC
	ADC NY,INDLO	;ADD CONTENTS OF EACH LOCATION
	INY
	BNE 2$
	INC Z,INDHI
	LDX Z,INDHI
	CPX I,100	;=X40 (FIRST PAGE AFTER ROM)
	BNE 2$
	STA A,40000	;FOR DEBUG ONLY, REMOVE FROM FINAL VERSION
	CMP A,CHKSUM
	BNE BADROM
	LDA Z,LITEST
	ORA I,2
	STA Z,LITEST
	STA A,LIGHTS
	JMP SWITST
BADROM:	LDA Z,LITEST
	AND I,375
	STA Z,LITEST
	STA A,LIGHTS
	JMP SWITST
WAITSN:	LDY A,SYNC	;ROUTINE TO CHECK FOR VERTICAL ROLL PAUSE
	BMI WAITSN
2$:	LDA A,SYNC
	BPL 2$
1$:	LDY A,SWITCH
	BPL 1$
	RTS
DELAY:	LDX I,0
1$:	.REPT 13	;ROUTINE TO CAUSE 8 MS DELAY
	NOP
	.ENDM
	INX
	BNE 1$
	RTS
	;***********ROUTINE TO CHECK IF NEW TEST DESIRED; TURNS OFF MUX***********
BUTTST:	INC Z,BUTCNT
	TAY
	LDA I,0	;TURN OFF MUX
	STA A,MUX
	LDA Z,BUTCNT
	AND I,3
	BEQ 1$
	TYA
	RTS
1$:	LDA A,SWITCH
	AND I,100	;=X60=BIT 6
	CMP Z,BUTSTS
	BNE 2$
	TYA
	RTS
2$:	STA Z,BUTSTS
	LDA Z,BUTSTS
	BEQ NEXTST
	TYA
	RTS
NEXTST:	JSR BLANKS
	LDA Z,TSTCNT
	ASL
	TAX
	LDA ZX,TESTNO	;LOAD PROPER POINTER
	CLC
	ADC I,6	;ALTER POINTER TO GET NEXT TEST ROUTINE
	STA ZX,TESTNO
	BCC 1$
	INX
	LDA ZX,TESTNO
	ADC I,0
	STA ZX,TESTNO
1$:	TYA
	RTS
ALFTST:	LDA I,ALFBUT&377
	STA Z,ALFNUM
	LDA I,ALFBUT/400
	STA Z,ALFNUM+1
ALFGEN:	JSR WAITSN
	JSR DELAY
	LDA I,1
	STA A,MUX
	JMP N,ALFNUM
ALFBUT:	JSR ALCHRS
	JMP 1$
	JSR CNTCHR
	JMP 1$
	JSR ENDALF	;"ALPHANUMERIC TEST COMPLETE"
	JMP 1$
	JMP SWITST
1$:	JSR BUTTST
	JMP ALFGEN
ALCHRS:	LDX I,0
	LDA I,40	;=X20 IS FIRST VALID CHARACTER
1$:	STA AX,ANRAM1
	STA AX,ANRAM2
	CLC
	ADC I,1
	CMP I,140	;=X60 IS FIRST INVALID CHARACTER
	BNE 2$
	LDA I,40
2$:	INX
	BNE 1$
	RTS
CNTCHR:	JSR BLANKS
	LDA I,1
	STA A,MUX
	LDA I,130	;=X58(AN X)
	STA A,ANRAMC
	RTS
ENDALF:	JSR BLANKS
	PRINT MSG1,100
	PRINT MSG3,205
	LDA Z,LITEST
	ORA I,4
	STA Z,LITEST
	STA A,LIGHTS
	RTS
BLANKS:	LDX I,1	;************TURN ON MUX
	STX A,MUX
	LDX I,0
	LDA I,40	;=X20(BLANK)
1$:	STA AX,ANRAM1
	STA AX,ANRAM2
	INX
	BNE 1$
	LDX I,0	;**************TURN OFF MUX
	STX A,MUX
	RTS
	;********************ROUTINES TO DISPLAY MOVING OBJECTS
MOVTST:	LDA I,MOVBUT&377
	STA Z,MOVNUM
	LDA I,MOVBUT/400
	STA Z,MOVNUM+1
	JSR BLANKS
	LDA I,100
	STA A,SHPSIZ
	LDA I,0
	STA Z,MOVPOS
MOVGEN:	JSR WAITSN
	LDA I,1
	STA A,MUX
	INC Z,MOVPOS
	JMP N,MOVNUM
MOVBUT:	JSR DIAG
	JMP 1$
	JSR DOWNMV
	JMP 1$
	JSR CROSMV
	JMP 1$
	JSR ENDMOV	;"MOTION TEST COMPLETE"
	JMP 1$
	JMP SWITST
1$:	JSR BUTTST
	JMP MOVGEN
       	;************ROUTINE TO GENERATE OBJECTS ALONG DIAGONAL
DIAG:	LDY I,10	;RY COINTAINS NEW HPOS & VPOS FOR EACH OBJECT
	CLC
	LDX I,17	;=XF, RX CONTAINS POINTER TO EACH OBJECT
1$:	TYA
	STA AX,VPOS	;SPECIFY OBJECT VERTICAL POSITION
	STA AX,HPOS	;SPECIFY SAME HORIZONTAL POSITION
	ADC I,17
	TAY
	TXA
	NOP
	STA AX,GR	;SPECIFY DIFFERENT OBJECT SHAPE & BRIGHTNESS
	DEX
	BPL 1$
	RTS
	;********ROUTINE TO CAUSE 14 OBJECTS TO MOVE DOWN SCREEN
DOWNMV:	LDY I,10	;RY COINTAINS DIFFERENT HPOS FOR EACH OBJECT
	CLC
	LDX I,17	;RX CONTAINS POINTER TO EACH OBJECT
1$:	LDA Z,MOVPOS	;MOVPOS IS SAME VPOS FOR EACH OBJECT
	STA AX,VPOS
	TYA
	STA AX,HPOS	;SPECIFY LARGER HPOS FOR EACH OBJECT
	ADC I,17
	TAY
	LDA I,7
	STA AX,GR	;SPECIFY OBJECT SHAPE & BRIGHTNESS
	DEX	;CAUSE RX TO POINT TO NEXT OBJECT
	BPL 1$
	RTS
	;***********ROUTINE TO CAUSE 14 OBJECTS TO MOVE ACROSS SCREEN
CROSMV:	LDY I,377	;RY CONTAINS DIFFERENT VPOS FOR EACH OBJECT
	CLC
	LDX I,17	;RX CONTAINS POINTER TO EACH OBJECT
1$:	LDA Z,MOVPOS
	STA AX,HPOS	;SPECIFY SAME HPOS FOR EACH OBJECT
	TYA
	STA AX,VPOS	;SPECIFY LARGER VPOS FOR EACH OBJECT
	SBC I,17
	TAY
	LDA I,7
	STA AX,GR	;SPECIFY OBJECT SHAPE & BRIGHTNESS
	DEX	;CAUSE RX TO POINT TO NEXT OBJECT
	BPL 1$
	RTS
ENDMOV:	LDA I,1	;*************ROUTINE TO CLEAR OBJECTS***********
	STA A,MUX
	LDX I,17	;MOVE ALL OBJECTS OFF SCREEN
	LDA I,377
1$:	STA AX,VPOS
	DEX
	BPL 1$
	PRINT MSG2,100
	PRINT MSG3,205
	LDA Z,LITEST
	ORA I,10
	STA Z,LITEST
	STA A,LIGHTS
	RTS
;********NEWMES - OUTPUTS MESSAGE AT LOCATION (X) ON SCREEN
;	ADDMES - OUTPUTS  MESSAGE ON NEXT LINE OF SCREEN
;	MESSAGE LOCATION (INDLO),MSADR USED WITH X + Y
;********ADD A MESSAGE POINTED TO BY INDL0, X HAS ADDR OF OUTPUT
;*****LINES 0-7 START AT X = 0,40,100,140,200,240,300,340
NEWMES:	LDY I,000
	LDA I,1
	STA A,MUX
	LDA I,0
NWMSA:	LDA NY,INDLO
	BNE 3$
	STX Z,MSADR	;CHECK EOT
	JMP ENDLIN
3$:	INY
	CMP I,015
	BNE NXCHAR
NXLIN:	JSR ENDLIN
	JMP NEWMES+2
NXCHAR:	STA AX,ANRAM
	INX
	BNE NWMSA
ADDMES:	LDY I,000	;ADD A LINE - SO SWEET
	LDA Z,MSADR
	TAX
	AND I,340	;CHECK IF AT BEGINNING OF LINE
	BEQ NEWMES
	CLC
	ADC I,040
	TAX
	JMP NEWMES+2
ENDLIN:	TXA	;CLEAR TO END OF LINE
	AND I,037
	EOR I,037
	STA Z,T3
	LDA I,040
1$:	STA AX,ANRAM
	INX
	DEC Z,T3
	BPL 1$
	LDA I,0
	STA A,MUX
	RTS
MSG1:	.ASCIZ/ALPHANUMERIC TEST COMPLETE/
MSG2:	.ASCIZ/MOTION TEST COMPLETE/
MSG0:	.ASCIZ/DIGITAL OUTPUT TEST/
MSG3:	.ASCIZ/SELECT NEXT TEST/
	.PAGE
	.SBTTL AUDIO TEST FOR STAR TREK (TRKAUD)
	;***********************AUDIO TESTS*****************************
	AUDNUM = 16
	BIT = 30
	PHASOR = 157001
	KICKER = 157002
	TONLV1	= 157003
	TONLV2 = 157004
	MOLVL = 157005
	NOISFR = 157006
	NOISAM = 157402
	TONPCH = 157403
	MOSPD = 157404
	.MACRO RAMP L
	CLC 	;ACCUM IS BOTH COUNTER & CONTENTS TO BE STORED
	LDA I,0
100$:	STA A,L
	JSR DELAY
	JSR BUTTST
	LDX Z,BUTSTS
	BEQ 101$
	CLC
	ADC I,1
	BNE 100$
101$:	NOP
	.ENDM
	;*********************AUDIO GENERATOR TESTS
AUDTST:	LDA I,377	;INITIALIZATIONS
	STA A,NOISAM	;TURN OFF NOISE
	LDA I,0
	STA A,AUDOUT	;TURN ON SOUND
	STA A,MOLVL
	STA A,TONLV1
	STA A,TONLV2
	LDA I,1
	STA A,MUX
	LDA I,200
	STA A,HPOS+15	;LOCATE PHASOR TRACER AT CENTER
	LDA I,100
	STA A,VPOS+17	;LOCATE STARFIELD ON SCREEN TO KEEP IT STILL
	LDA I,AUDBUT&377	;SET POINTER FOR INDIRECT JUMP
	STA Z,AUDNUM
	LDA I,AUDBUT/400
	STA Z,AUDNUM+1
	JSR BLANKS
AUDGEN:	JMP N,AUDNUM	;CYCLE THROUGH AUDIO TESTS
AUDBUT:	JSR PHASLP
	JMP 1$
	JSR NOISE
	JMP 1$
	JSR MOTOR
	JMP 1$
	JSR TONES
	JMP 1$
	JSR ENDAUD	;"AUDIO TESTS COMPLETE"
	JMP 1$
	JMP SWITST
1$:	JSR BUTTST
	JMP AUDGEN
PHASLP:	INC Z,BIT	;*******ROUTINE CAUSES PHASOR SOUND ON & OFF**********
			;CHECKS VISUAL STARFIELD
	PRINT MSG5,100	;"CHECK PHASORS & VISUAL STARFIELD"
	LDA Z,BIT
	AND I,1
	STA A,PHASOR	;F/F PHASOR EACH CYCLE
	BEQ 2$
	LDA I,0
	STA A,SFKILL	;TURN ON STARFIELD
	LDA I,370
1$:	SBC I,1	;CAUSE PHASOR TRACER TO ROLL TO CENTER OF SCREEN
	JSR WAITSN
	LDY I,1	;TURN ON MUX
	STY A,MUX
	STY A,VPOS+17
	STA A,VPOS+15	;DECREMENT PHASOR TRACER
	JSR BUTTST	;CHECK FOR BUTTON & TURNS OFF MUX
	LDY Z,BUTSTS
	BEQ 3$
	CMP I,200	;ELSE MOVE PHASOR TRACER UP TOWARDS CENTER
	BPL 1$
3$:	LDA I,1
	STA A,MUX
	LDA I,377	;MOVE PHASOR TRACER OFF SCREEN
	STA A,VPOS+15
	RTS
2$:	JSR DELSEC
	RTS
NOISE:	LDA I,0	;CAUSES RAMP TO NOISAM WITH NOISFR F/F EACH INTERVAL
	STA A,PHASOR	;TURN OFF PHASORS
	LDA I,1
	STA A,SFKILL	;TURN OFF STARFIELD
	STA A,KICKER
	STA A,MUX
	LDA I,377
	STA A,VPOS+15
	STA A,VPOS+17
	INC Z,BIT	;F/F NOISFR
	LDA Z,BIT
	AND I,1
	STA A,NOISFR
	PRINT MSG6,100	;"CHECK NOISE"
	RAMP NOISAM	;MACRO CALL
	RTS
MOTOR:	INC Z,BIT	;CAUSES RAMP TO MOTOR WITH MOLVL F/F EACH INTERVAL
	LDA Z,BIT	;F/F MOLVL
	AND I,1
	STA A,MOLVL
	PRINT MSG7,100	;"CHECK MOTOR SOUNDS"
	RAMP MOSPD	;MACRO CALL
	RTS
TONES:	LDA Z,COUNT	;CAUSES RAMP TO TONE PITCH WITH 1 OF 4 LEVELS EACH INTERVAL
	CLC
	ADC I,1
	AND I,3
	STA Z,COUNT	;INCREMENT 2-BIT COUNTER
	LDA I,1
	AND Z,COUNT
	STA A,TONLV1	;STORE LOW BIT IN TONLV1
	LDA I,2
	AND Z,COUNT
	LSR
	STA A,TONLV2	;STORE HIGH BIT IN TONLV2
2$:	PRINT MSG8,100	;"CHECK TONES"
	RAMP TONPCH
	RTS
DELSEC:	CLC
	LDA I,0	;ROUTINE TO CAUSE 1 SECOND DELAY & CHECK FOR BUTTON
1$:	JSR DELAY
	JSR BUTTST
	LDY Z,BUTSTS
	BEQ 3$
	CLC
	ADC I,1
	BNE 1$
3$:	RTS
ENDAUD:	LDA I,1	;TURN OFF SOUND
	STA A,AUDOUT
	JSR WAITSN
	PRINT MSG4,100	;"AUDIO COMPLETE"
	PRINT MSG3,210	;"SELECT TEST"
	LDA Z,LITEST
	ORA I,20
	STA Z,LITEST
	STA A,LIGHTS
	RTS
MSG4:	.ASCIZ/AUDIO TESTS COMPLETE/
MSG5:	.ASCIZ/CHECK PHASORS AND STARFIELD/
MSG6:	.ASCIZ/CHECK NOISE/
MSG7:	.ASCIZ/CHECK MOTOR SOUNDS/
MSG8:	.ASCIZ/CHECK TONES/
	.SBTTL ANALOG DIAGNOSTIC TESTS FOR STARTREK (TRKANL)
	.PAGE
	ANLNUM = 20
	ANLIN = 156400
	ANLOUT = 157400	;=XDF00
	CRVPOS = 157406
	CRHPOS = 157405
	CIRSIZ = 157407
ANLTST:	LDA I,0	;INITIALIZE FOR ANALOG TESTS
	STA Z,BIT
	STA A,MUX	;TURN OFF MUX
	LDA I,1
	STA A,AUDOUT	;TURN OFF SOUND
	LDA I,ANLBUT&377	;SET POINTER FOR INDIRECT JUMP
	STA Z,ANLNUM
	LDA I,ANLBUT/400
	STA Z,ANLNUM+1
ANLGEN:	JSR WAITSN
	JMP N,ANLNUM
ANLBUT:	JSR CIRCEN
	JMP 1$
	JSR SHPTST
	JMP 1$
	JSR LOGIN
	JMP 1$
	JSR LOGOUT
	JMP 1$
	JSR ENDANL	;"ANALOG TESTS COMPLETE"
	JMP 1$
	JMP SWITST
1$:	JSR BUTTST
	JMP ANLGEN
CIRCEN:	LDA I,200	;**********ROUTINE TO TEST CIRCLE GENERATOR
	STA A,CRVPOS
	JSR DEL50U
	STA A,CRHPOS
	JSR DEL50U
	STA A,CIRSIZ
	JSR DEL50U
	LDA I,1
	STA A,MUX
	STA A,CIRBLK	;TURN ON CIRCLE
	STA A,PHASOR
	LDA I,100	;LOCATE PHASOR TRACER ABOVE MIDDLE OF SCREEN
	STA A,VPOS+15
	PRINT MSG10,100	;"CIRCLE TEST"
	PRINT MSG11,143	;	"CLIP ON ANALOG TEST FIXTURE"
	.REPT 15
	NOP
	.ENDM
	RTS
SHPTST:	LDA I,0	;*******ROUTINE TO DO SHIP TEST*******
	STA A,142000
	STA A,141400
	STA A,CIRBLK	;TURN OFF CIRCLE
	STA A,AUDOUT	;TURN ON SOUND
	STA A,PHASOR	;TURN OFF PHASOR
	LDA I,1
	STA A,MUX
	LDA I,100	;LOCATE SHIP ON SCREEN
	STA A,VPOS+16
	LDA I,377
	STA A,HPOS+16
	STA A,VPOS+15	;MOVE OBJ.15 OFF SCREEN
	LDA I,200
	STA A,SHPSIZ
	PRINT MSG13,100	;"SPACESHIP TEST"
	RTS
LOGIN:	LDA I,1
	STA A,MUX
	STA A,AUDOUT	;TURN OFF SOUND
	LDA I,377	;TURN OFF SHIP
	STA A,VPOS+16
	LDA I,3
	STA A,143777
	PRINT MSG14,100	;"ANALOG INPUT TEST"
	PRINT MSG15,140	;"PUT VIDEO PROBE ON A/D COMPARE"
	STA A,ANLIN
	JSR DEL2MS
	STA A,ANLIN+1
	JSR DEL2MS
	STA A,ANLIN+2
	JSR DEL2MS
	STA A,ANLIN+3
	JSR DEL2MS
	RTS
DEL2MS:	LDX I,40
1$:	JSR DEL36U
	DEX
	BPL 1$
	RTS
LOGOUT:	INC Z,BIT	;*************ROUTINE TO TEST ANALOG OUTPUTS********
	PRINT MSG16,100	;"ANALOG OUTPUT TEST"
	LDA Z,BIT
	LDX I,7
1$:	STA AX,ANLOUT
	.REPT 10
	NOP
	.ENDM
	DEX
	BPL 1$
	RTS
ENDANL:	PRINT MSG9,100
	PRINT MSG3,205
	LDA Z,LITEST
	ORA I,40
	STA Z,LITEST
	STA A,LIGHTS
	RTS
MSG9:	.ASCIZ/ANALOG TESTS COMPLETE/
MSG10:	.ASCIZ/CIRCLE TEST/
MSG11:	.ASCIZ/CLIP ON ANALOG TEST FIXTURE/
MSG12:	.ASCIZ/ADJUST CIRCLE DC OFFSET/
MSG13:	.ASCIZ/SPACESHIP TEST/
MSG14:	.ASCIZ/ANALOG INPUT TEST/
MSG15:	.ASCIZ/PUT VIDEO PROBE ON A-D COMPARE/
MSG16:	.ASCIZ/ANALOG OUTPUT TEST/
DEL50U:	.REPT 12
	NOP
	.ENDM
DEL36U:	.REPT 36
	NOP
	.ENDM
	RTS
	.=23774
	.WORD START,START
	.END
                                                         