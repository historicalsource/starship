	.TITLE SPACE  VERSION 2 ***********************************
	.NLIST TTM
	.LIST MEB
	INDLO = 0
	INDHI = 1
	SPEED = 2
	T0 = 3
	T1 = 4
	T2 = 5
	T3 = 6
	SPEEDW = 7
	PITCHW = 10
	ROLLW = 11
	T4 = 12
	FC = 14	;FRAME COUNTER
	SFHMOT = 16	;STARFIELD H MOTION REGISTER
	SFVMOT = 17	;STARFIELD V MOTION REGISTER
	

	HPOSTBL = 30	;30-63 STAR N HORIZ POSITION LSB,MSB
	VPOSTBL = 70	;70-123 STAR N VERT POSITION LSB,MSB
	PTVPOS=123	;PHASER MARKER
	PICTBL = 130	;130-147 STAR N CONTROL
			;BIT 0-2 PICTURE SELECT
			;BIT 3 BRIGHTNESS
	INDL1 = 150	;INDIRECT ADDRESS FOR SHIFT
	INDL2 = 152
	OLDROL = 65	;STORED ROLLW
	HPD = 66	;DIFFERENCE PASSED TO STP
	OLDPIT = 67	;STORED PITCHW
	VPD = 125
	SHHPOS = 154	;SHIP PARAMETERS FOR SHIP 1
	SHVPOS = 156
	SHMOFL = 160	;BIT 6 H SHIP OVERFLOW
			;BIT 7 V SHIP OVERFLOW
	RELMOH = 161	;SHIP H SPEED CODE
	RELMOV = 162	;SHIP V SPEED CODE
	SHRES = 163	;SHIP RESET WORD
	SHSIZL = 164	;SHIP SIZE LSB
	SHSIZE = 165	;MSB
	SHRBLO = 166	;SHIP RESET LOW BITS
	CLOSRT = 167	;CLOSING RATE
	COL = 170	;COLLISSION LATCHES
			;BIT 0 - CIRCLE ON
			;BIT 1 - CIRCLE & SHIP
			;BIT 2 - BULLET & SHIP
			;BIT 3 - SHIP ON
	SHACC = 171
	SHIPID = 172	;TYPE OF SHIP
			;BIT 6 TUG
			;BIT 7 SLOW GROW
	HITTM = 173	;HIT TIMER
	SHIP = 16
	SR = 17
	L = SHL&377
	R = SHR&377
	FLAG = 226	;BIT 0 SHIP 1 ACTIVE
			;BIT 1 STARFIELD  BLANKING
			;BIT 2 HYPERSPACE
			;BIT 3 BONUS TIME
			;BIT 4 SHIP 2 ACTIVE
			;BIT 5 CIRCLE KILL
			;BIT 6 SLOW OR FAST
			;BIT 7 CIRCLE ACTIVE

	CHPOSB = 231	;CIRCLE H POSITION LSB, MSB
	CVPOSB = 174	;CIRCLE V POSITION LSB,MSB
	CSIZB = 176	;CIRCLE SIZE LSB,MSB

	AUDFLG = 200	;AUDIO FLAG BIT 0 ALERT KLAXON
			;BIT 1 PHASORS
			;BIT 2 PHOTON TORPEDO
			;BIT 3 SMALL EXPLOSION
			;BIT 4 EXPLOSION OF SHIP 1
			;BIT 5 EXPLOSION OF PLAYER

			;BIT 6 EXPLOSION OF SHIP 2
	CREDIT = 202	;COIN ACCUMULATOR
	GAMTIM = 203	;TIMER FOR GAME
	SCORE = 204	;BCD SCORE MSB, LSB
	MSADR = 206	;MESSAGE POINTER
	TIMERS = 210	;210-220 TIME LOW RET, HIGH RET
	HITTIM=173
	PHTIM = 227	;PHASOR TIMER
	PETIM = 233	;PLAYER EXPLODING TIMER
	CTIM = 225	;CIRCLE TIMER
	OLDSPD = 230
	ATTIM=234
	WHTIM = 235	;WHISH TIMER
	DONTIM = 237	;TIME SINCE LAST GAME (SECONDS X 5)
	PTLEFT = 240	;PHOTON TORPEDOES LEFT
	SCA = 241	;OTHER SCORE
	OFSET = 242	;OFFSET TO SHIP PARAMETERS
	TEMP = 250
	SJHPOS = 260	;START OF SECOND SHIP PARAMETERS
	DIFF = SJHPOS-SHHPOS	;SECOND SHIP PARAMETERS OFFSET
	RDEC=47522
	SWA = 120000
	SYNC = 130000
	GRSEL = 141400	;GRAPHICS SELECTOR
	COLLAT = 142000
	ANRAM = 144000	;ALPHANUMERICS
	HPOS = 146000
	VPOS = 150000
	GR = 152000	;GRAPHICS RAM
	RDATA = 154000
	SHMOD = 156000	;SHIP EXPLOSION MODULATION
	MOD = 156001	;CIRCLE MODULATION
	CIRBLK = 156002	;CIRCLE BLANKING
	SFKILL = 156003	;BLANK STARFIELD
	HYPSPC = 156004	;HYPERSPACE
	BLHOLE = 156005	;BLACKHOLE
	MUX = 156006
	CRLITE = 156007
	PTCHIN = 156400	;PITCH
	ROLIN = 156401	;CONNECT ROLL TO ADC
	SPDIN = 156402	;SPEED
	TIMPOT = 156403	;GAME TIME SET TO ADC
	AUDOUT=157000	;0-ATTRACT
			;1-PHASOR
			;2-KICKER
			;3-SL1 TONE LEVEL LOW BIT
			;4-SL2 HIGH BIT
			;5-MOLVL MOTOR SOUND LEVEL
			;6-NOISE FREQ
	KICKER = 157002	;INITIALIZE PULSE
	DAC = 157400	;SPARE ANALOG OUTPUT
	CHPOS = 157405	;CIRCLE HPOS
	CVPOS = 157406	;CIRCLE VPOS
	CSIZE = 157407	;CIRCLE SIZE
	.MACRO LSR4
	LSR
	LSR
	LSR
	LSR
	.ENDM
	.MACRO WDOG	;REFRESH WATCHDOG
	LDA I,1
	STA A,MUX
	LDA I,376
	STA A,HPOS
	STA A,MUX
	.ENDM

	.MACRO PRINT M,X
	.IF B,X
	LDA I,M&377
	STA Z,INDLO
	LDA I,M/400
	STA Z,INDHI
	JSR ADDMES
	.MEXIT
	.ENDC
	LDA I,M&377
	STA Z,INDLO
	LDA I,M/400
	STA Z,INDHI
	LDX I,X
	JSR NEWMES
	.ENDM

	.MACRO BIC A,B	;CLEAR BITS IN B
	LDA I,377-A
	AND Z,B
	STA Z,B
	.ENDM

	.MACRO BIS A,B	;SET BITS IN B
	LDA I,A
	ORA Z,B
	STA Z,B
	.ENDM

	.MACRO WAIT A,X	;USE TIMER A, COUNT X
	LDX I,A*3-3	;X BLANK FOR RANDOM DELAY
	.IF NB,X
	LDA I,X
	.ENDC
	.IF B,X
	LDA A,RDATA
	LSR
	LSR
	.ENDC
	JSR TIME
	.ENDM
	.GLOBL CHSUM

	.ASECT
	.=26000
	.SBTTL MAIN 60H2 LOOP
MAIN:	LDA A,SYNC
	BMI MAIN
1$:	LDA A,SYNC
	BPL 1$
	JSR FRAME	;OUTPUT EVERYTHING
	JSR MOVAST	;COMPUTE ASTEROID MOTION
	JSR ANIN	;INPUT & PROCESS CONTROLS
	JSR SHMOT	;SHIP MOTION
	JSR PTMOT	;PHOTON TORPEDO MOTION
	JSR PLAMOT	;PLANET MOTION
	JMP ESO	;EVERY SO OFTEN
	.SBTTL V BLANK SERVICE
FRAME:	LDA I,1	;SWITCH MULTIPLEXER
	STA A,MUX
	LDA Z,CHPOSB+1	;CIRCLE H
	EOR I,377
	STA A,CHPOS
	LDX I,15
	LDY I,32
3$:	LDA AY,HPOSTBL+1
	STA AX,HPOS	;H POSITION
	LDA AY,VPOSTBL+1
	STA AX,VPOS	;V POSITION
	LDA ZX,PICTBL
	STA AX,GR	;PICTURE
	DEX
	DEY
	DEY
	BPL 3$
	LDA I,0	;FIX STARFIELD
	STA A,HPOS+SR
	STA A,VPOS+SR
	LDA Z,CVPOSB+1	;OUTPUT CIRCLE V POSITION
	STA A,CVPOS
	LDA Z,GAMTIM
	BEQ 1$
4$:	AND I,17
	CLC
	ADC I,60	;OUTPUT GAME TIMER
	STA A,ANRAM+73
	LDA Z,GAMTIM
	LSR4
	CLC
	ADC I,60
	STA A,ANRAM+72
	LDX I,5
5$:	LDA AX,FUEL-1	;OUTPUT FUEL MESSAGE
	STA AX,ANRAM+64
	DEX
	BNE 5$
1$:	LDA Z,CSIZB+1	;CIRCLE SIZE
	STA A,CSIZE
DUMMY:	LDX I,0	;WHICH SHIP THIS FRAME?
	LDA Z,FC
	AND I,1	;POSITION REGISTER DIFFERENCE BETWEEN SHIPS IN X FOR SHIP 2
	BEQ 15$
	LDX I,DIFF
15$:	LDA ZX,SHMOFL
	AND I,100
	BNE 6$
	LDA ZX,SHHPOS+1	;GET HORIZ SHIP POSITION
	JMP 1$
6$:	LDA I,377	;LOCK H POS AT FF IF OVERFLOW
1$:	STA A,HPOS+SHIP	;OUTPUT SHIP H POS
	LDA ZX,SHRES
	TAY		;BLANK SHIP IF OFF SCREEN
	AND I,17
	CMP I,17
	BNE 3$
4$:	LDA I,370
	JMP 2$
3$:	CPY I,360
	BCS 4$
	LDA ZX,SHMOFL
	STA AY,142000	;OUTPUT START ADDRESS
	LDA ZX,SHVPOS+1	;GET VERT
	LDY ZX,SHMOFL
	BPL 2$
	LDA I,1	;LOCK AT POSITION 1 IF OVERFLOW
2$:	STA A,VPOS+SHIP	;OUTPUT V
	LDA ZX,SHSIZE	;OUTPUT SHIP SIZE
	STA A,157401
	LDA ZX,RELMOH	;OUTPUT GRAPHICS
	AND I,340	;TOP BITS FOR DIRECTION
	STA Z,T1
	LDA ZX,SHIPID
	AND I,7
	ORA Z,T1
	STA A,GRSEL
	LDA ZX,HITTIM	;EXPLODING
	BEQ 13$
	LDA Z,FC
	LSR
	LSR
	LSR
	NOP
	BCS 13$
	LDA I,207
	STA A,GRSEL
13$:	STA A,SHMOD	;NOW
	TXA
	EOR I,DIFF	;COLLISION FROM LAST FRAME
	TAX
	LDA A,COLLAT	;COLLISSION LATCHES
	STA ZX,COL
	STA A,154000	;RESET LATCH
12$:	CLI	;IN CASE COIN DISABLED
	CLD	;IN CASE
	LDA Z,FLAG	;CIRCLE BLANKING
	ROL
	ROL
	STA A,CIRBLK
	ROL
	STA A,MOD
	ROL
	ROL
	ROL
	ROL
	STA A,HYPSPC
	ROL
	LDA Z,GAMTIM
	BEQ 5$
	ORA I,1
5$:	STA A,SFKILL
	BIC 2,FLAG
	LDA I,0	;MUX OFF
	STA A,MUX
	RTS
FUEL:	.ASCII/FUEL:/
	.SBTTL ASTEROID MOTION
MOVAST:		;MOVING ASTEROID CONTROL
		;X HAS POSTBL ADDRESS
		;T4 HAS STAR NUMBER
	LDX Z,SPEED	;SET UP INDIRECT FOR SHIFT
	LDA AX,J1
	STA Z,INDL1
	LDA AX,J2
	STA Z,INDL2
	LDX I,HPOSTBL+32	;HORIZONTAL EXPANSION
	LDA I,15
	STA Z,T4
	LDA Z,AUDFLG	;H MOTION FOR PHOTON TORPEDO
	AND I,4
	BNE 2$
	DEX
	DEX
	DEC Z,T4
3$:	TXA	;PERSPECTIVE
	AND I,2	;"
	BNE 4$	;"
	LDA Z,FC	;"
	AND I,1	;"
	BNE 2$	;"
4$:	JSR EXPAND
	BCC 2$
	JSR RESSTR
2$:	LDA Z,SFHMOT
	JSR HSTP	;CHANGE SFHMOT INTO PLUS OR MINUS ONE IN T1,T0
	CLC
	JSR ADDACC	;ADD STARFIELD MOTION
	BCC 1$
	JSR RESSTR
1$:	DEX
	DEX
	DEC Z,T4
	BPL 3$
	LDA I,14
	STA Z,T4
	LDX I,VPOSTBL+30
VSTARLP:	TXA	;PERSPECTIVE
	AND I,2	;"
	BNE 4$	;"
	LDA Z,FC	;"
	AND I,1	;"
	BNE 3$	;"
4$:	JSR EXPAND	;VERTICAL EXPANSION
	BCC 3$
	JSR RESSTR
3$:	LDA  Z,SFVMOT
	JSR VSTP
	CLC
	JSR ADDACC

	BCC 1$
	JSR RESSTR
1$:	DEX
	DEX
	DEC Z,T4
	BPL VSTARLP
	LDA Z,FC	;CHECK FRAME COUNT
	AND I,3
	CMP I,3
	BNE 2$
	JSR ASGRO	;LET ASTEROIDS GROW ON 4TH FRAME
2$:	RTS
EXPAND:	;EXPANDING STAR ILLUSION
		;ENTERED WITH POSTBL ADDRESS IN X
		;MODIFIES POSTBL V OR H,T0,T1,ACC
	LDA ZX,0
	STA Z,T0
	LDA ZX,1
	SEC
	SBC I,200
	STA Z,T1	;OFFSET IN T0,T1
2$:	JSR SHIFT	;SHIFT
	JSR ADDSPD	;ADD
1$:	RTS
RESSTR:	;RESETS ASTEROID
		;ENTERED WITH H OR V POSTBL ADDRESS IN X
		;DESTROYS ACC,Y,T1
	;LET LSB BE RANDOM POINTER
	ASL Z,T4
	STX Z,T1	;SAVE X
	LDX Z,T4	;STAR NO X 2 IN X
	LSR Z,T4	;PUT T4 BACK
	JSR RNUM
	STA ZX,HPOSTBL+1	;RESET HORIZ MSB
	JSR RNUM
	STA ZX,VPOSTBL+1	;RESET VERT MSB
	AND I,370	;SET SMALL SIZE FOR PIC RESET
	ORA I,4
	LDX Z,T4
	STA ZX,PICTBL	;RESET PICTURE
	LDX Z,T1	;RESTORE X
	RTS
ASGRO:		;MAKES ALL ASTEROIDS GROW AT RANDOM
	;DESTROYS X,Y,ACC
	LDX I,14
4$:	LDY Z,SPEED
	TXA	;GROW LESS IF SLOW
	AND I,1
	BEQ 2$
	DEY
	DEY
2$:	BIT A,RDATA	;PROBABILITY OF MOVING INCREASES WITH SPEED
	BVS 1$
	DEY
	BNE 2$
	LDA ZX,PICTBL	;GET PICTURE TO GROW
	AND I,7
	BEQ 3$	;NOT IF FULL SIZE ALREADY
	DEC ZX,PICTBL	;GROW!
3$:	LDA A,RDATA
	BNE 1$
	LDA I,10	;MAKE IT BRIGHTER
	ORA ZX,PICTBL
	STA ZX,PICTBL
1$:	DEX
	BPL 4$	;LOOP FOR EACH STAR
	RTS
	.SBTTL CONTROL PROCESSING
ANIN:	LDA Z,GAMTIM
	BEQ	1$
	NOP
	ASL Z,SFHMOT	;STARFIELD MOTION
	ASL Z,SFVMOT
	LDA A,SYNC	;INPUT ROLL EVERY FRAME
	AND I,77
	ADC Z,ROLLW
	LSR
	STA Z,ROLLW
	SEC
	SBC Z,OLDROL
	STA Z,HPD
	LDA Z,ROLLW
	STA Z,OLDROL
	STA A,PTCHIN	;SWITCH TO PITCH
	LDA I,3
	JSR DELAY
	LDA A,SYNC	;INPUT PITCH EVERY FRAME
	AND I,77
	ADC Z,PITCHW
	LSR
	STA Z,PITCHW
	LDA Z,OLDPIT
	SEC
	SBC Z,PITCHW
	STA Z,VPD
	LDA Z,PITCHW
	STA Z,OLDPIT
1$:	LDA Z,FC	;GET FRAME COUNT
	AND I,3
	ASL
	TAX
	LDA AX,SBTBL	;SET UP MOTION SERVICE JUMP
	STA Z,INDLO
	LDA AX,SBTBL+1
	STA Z,INDHI
	LDA A,SYNC	;GET ADC
	AND I,77
	JMP N,INDLO	;JUMP INDIRECT TO SERVICE
	.BYTE 105		;DUMMY BYTE
	.EVEN
SBTBL:	.WORD ROLL,PITCH,SPEEDI,SPARE
MOVRET:	INC Z,FC
	STA A,ROLIN
	RTS
ROLL:	LDA Z,ROLLW	;GET ROLL
	ASL
	ASL	;FILL 8 BIT DATA
	SEC
	SBC I,200	;OFFSET FROM CENTER
	ROL	;EXTRA AMPLITUDE FOR COIL

	BCC ROLLF
ROLRT:	EOR I,377	;ABSOLUTE VALUE
	JSR RFT
	ORA I,360	;SET UP STARFIELD MOTION
	STA Z,SFHMOT
	JMP MOVRET
ROLLF:	JSR RFT
	STA Z,SFHMOT
	JMP MOVRET
PITCH:	LDA Z,PITCHW	;GET PITCH
	ASL
	ASL	;8 BIT DATA
	SBC I,200	;OFFSET
	ROL
	BCC CLIMB
DIVE:	EOR I,377
	JSR RFT
	BNE RET2
CLIMB:	JSR RFT
	ORA I,360
RET2:	STA Z,SFVMOT
	JMP MOVRET

SPEEDI:	LDA Z,SPEEDW	;BUILD SPEED CODE
	.REPT 3
	LSR
	.ENDM
	CLC
	STA Z,T1
	LSR Z,T1
	ADC Z,T1
	LSR
	CLC
	AND I,7
	EOR I,07
	ADC I,1
	STA Z,SPEED
	LDA Z,GAMTIM
	BEQ SPARE
	LDA A,SWA	;INPUT SPEED
	AND I,100
	LSR
	ORA I,30
	SEC	;INTEGRATING
	SBC Z,SPEEDW
	JSR ASR
	JSR ASR
	ADC Z,SPEEDW	;2 SPEEDW = SPEEDW + (INPUT-SPEEDW)/8
	ADC Z,SPEEDW
	LSR
	STA Z,SPEEDW
	JMP MOVRET

SPARE: JMP MOVRET

	.SBTTL SHIP MOTION
	;HORIZONTAL
SHMOT:	LDA Z,FLAG	;CHECK IF SHIP 1 ACTIVE
	AND I,1
	BNE 4$
	BIS 374,SHVPOS+1	;BLANK SHIP 1
	JMP SH2
4$:	LDY I,0	;Y HAS OFFSET FOR SHIP 1
	LDX I,SHHPOS
	JSR SHORIZ
SH2:	LDA Z,FLAG	;CHECK IF SHIP 2 ACTIVE
	AND I,20
	BNE 4$
	BIS 374,SHVPOS+1+DIFF
	RTS
4$:	LDX I,SHHPOS+DIFF
	LDY I,DIFF
	JSR SHORIZ
	RTS
SHORIZ:	LDA Z,SFHMOT	;LOCK TO STARFIELD MOTION
	JSR HSTP
	CLC
	JSR ADDACC	;ADD STARFIELD POSITION
	BCC 5$
	LDA AY,SHMOFL	;COMPLIMENT MOTION OVERFLOW BIT IF WRAPAROUND
	EOR I,100
	STA AY,SHMOFL
5$:	LDA AY,HITTIM
	BEQ 1$
	JMP SHEXP
1$:	LDA AY,RELMOH	;SET UP RELATIVE SHP MOTION
	BMI 2$
	LDA I,0
	BEQ 2$+2
2$:	LDA I,377
	STA Z,T1	;ONE BIT PLUS SIGN IN T1
	LDA AY,RELMOH
	ASL
	ASL ;FOR FASTER SHIP
	ROL Z,T1	;FOR FASTER SHIP
	STA Z,T0	;6 BITS IN T0
	JSR ADDSPD	;ADD THE RELATIVE MOTION
	BCC 3$
	LDA AY,SHMOFL
	EOR I,100
	STA AY,SHMOFL
3$:	LDA I,0	;ADD GROWTH OFFSET
	STA Z,T1
	LDA Z,CLOSRT
	LDA AY,SHIPID
	BMI 7$
	LDA AY,CLOSRT
	ASL		;CLOSING RATE TOP 2 BITS IN T1
	ASL
	ROL Z,T1
	JMP 7$+3
7$:	LDA AY,CLOSRT
	ASL
	ROL Z,T1
	STA Z,T0	;REST IN T0
	JSR ADDSPD
	BCC 6$
	LDA AY,SHMOFL
	EOR I,100
	STA AY,SHMOFL
6$:	NOP
	;VERTICAL
SVMOT:	INX ;POINT X TO SHVPOS
	INX
	LDA Z,SFVMOT	;LOCK TO STARFIELD MOTION
	JSR VSTP
	CLC
	JSR ADDACC	;ADD STARFIELD MOTION
	BCC 1$
	LDA AY,SHMOFL	;COMPLIMENT MOTION OVERFLOW BIT IF WRAPAROUND
	EOR I,200
	STA AY,SHMOFL
1$:	LDA AY,RELMOV
	BMI 2$
	LDA I,0
	JMP 2$+2
2$:	LDA I,377	;ONE BIT PLUS SIGN IN T1
	STA Z,T1	;ONE BIT PLUS SIGN IN T1
	LDA AY,RELMOV
	ASL
	ASL ;FOR FASTER SHIP
	ROL Z,T1	;FOR FASTER SHIP
	STA Z,T0	;6 BITS IN T0
	JSR ADDSPD	;ADD THE RELATIVE MOTION
	BCC 3$
	LDA AY,SHMOFL
	EOR I,200
	STA AY,SHMOFL
3$:	LDA I,377	;ADD GROWTH OFFSET
	STA Z,T1
	LDA AY,SHIPID
	BPL 5$
	LDA AY,CLOSRT
	LSR
	JMP 5$+3
5$:	LDA AY,CLOSRT
	EOR I,377
	STA Z,T0
	NOP
	NOP
	JSR ADDSPD
	BCC 4$
	LDA AY,SHMOFL
	EOR I,100
	STA AY,SHMOFL
	;SET UP SHRES
4$:	LDA AY,SHSIZE	;LOAD SIZE TO ACCESS MULT TABLE
	LSR4
	TAX
THOFL:	LDA AY,SHMOFL	;TEST H OVERFLOW
	AND I,100
	BNE 1$
	LDA I,0	;ON SCREEN HORIZONTALLY
	STA AY,SHRES
	BEQ TVOFL
	;OFF SCREEN HORIZONTAL ********************************
1$:	LDA AX,HMULTB	;GET MULTIPLIER
	STA Z,T1
	LDA AY,SHMOFL
	AND I,300
	STA AY,SHMOFL
	LDA AY,SHHPOS+1	;GET MULTIPLICAND
	STA Z,T2
	JSR MULT	;T1 X T2 IN ACC
	BIT A,HMULTB+1	;DATA OF C0
	BEQ 2$	;CHECK OVERFLOW
	LDA I,77	;SATURATE
2$:	ORA AY,SHMOFL
	STA AY,SHMOFL	;SET UP LOW BITS
	LSR
	LSR
	AND I,17
	STA AY,SHRES	;SET RESET
TVOFL:	LDA AY,SHMOFL	;TEST VERT OVERFLOW
	BMI 1$
	LDA I,17	;ON SCREEN VERTICALLY
	AND AY,SHRES
	STA AY,SHRES
	BPL 2$
1$:	LDA AX,VMULTB	;VERTICAL MULTIPLIER
	STA Z,T1
	LDA AY,SHVPOS+1
6$:	EOR I,377
	STA Z,T2
	JSR MULT
	.REPT 4
	ASL
	BCS 3$
	.ENDM
		;MASK TO 4 BITS
		;PUT VERT IN TOP 4 BITS
4$:	ORA AY,SHRES
	STA AY,SHRES
2$:	JMP SETSIZ
3$:	LDA I,360
	BNE 4$
HMULTB:.BYTE 360,300,140,100,54,44,40,40,40,40,40,40,40,40,40,40
VMULTB: .BYTE 200,160,140,120,100,72,66,40,33,30,26,25,23,20,14,12
SETSIZ:	LDA I,0	;SHIP GROWTH
	STA Z,T1	;MSB IN T1
	LDA AY,CLOSRT
	ASL
	ROL Z,T1
	ASL
	ROL Z,T1
	PHA
	LDA AY,SHIPID
	AND I,40
	BNE 1$
	PLA
	ASL
	ROL Z,T1
4$:	STA Z,T0
	CLC
	TYA
	ADC I,SHSIZL	;POINT TO SIZE
	TAX
	JSR ADDSPD
	BCC 2$
	BPL SHPOF
	TYA
	TAX
	INC ZX,SHSIZE	;NO WRAPAROUND BACKWARDS
2$:	LDA AY,COL
	AND I,10
	BEQ 3$
5$:	RTS
	NOP	;MIGHT HAVE TO CHECK SIZE
	NOP
	NOP
3$:	LDX I,0
	TYA
	BEQ 40$
	LDX I,6
40$:	LDA ZX,TIMERS
	BNE 5$
	LDA Z,FC
	AND I,17
	CMP I,10
	BNE 5$
	JMP RESSHP
1$:	PLA
	JMP 4$
SHEXP:	RTS
SHPOF:	;TAKES CARE OF SHIP GETTING TOO BIG
	LDA Z,COL	;IS IT VISIBLE?
	AND I,10
	BEQ 1$
	LDA AY,SHRES	;YES
	AND I,360
	BNE 1$
	LDA AY,SHRES
	AND I,17	;IS SHIP PARTIALLY OFF SCREEN?
	BEQ 4$
	AND I,10	;YES
	BNE 1$
	BEQ 5$
4$:	LDA AY,SHHPOS+1	;IS SHIP IN LEFT HALF?
	BMI 1$
5$:	LDA AY,SHVPOS+1	;IS VERTICAL BETWEEN 40 AND C0?
	ASL
	BCS 2$
	JMP 3$
2$:	ASL
	BCS 1$
3$:	TYA	;CRASH

	STY Z,OFSET
	BNE 7$
	BIC 1,FLAG	;SHIP OFF
	JSR PLEXP
	LDY I,0
1$:	JMP RESSHP
7$:	BIC 20,FLAG	;SHIP 2 OFF
	JSR PLEXP
	LDY I,DIFF
	JMP RESSHP
	.SBTTL UTILITY ROUTINES
MULT:	;MULTIPLY T1 X T2,RESULTS IN ACC
	;SATURATES AT FF - NO OVERFLOW
	;CARRY BIT SET IF OVERFLOW OCCURRED
	LDA I,0	;CLEAR ACC
2$:	ASL Z,T1	;MULTIPLY LOOP
	BCC 1$
	CLC
	ADC Z,T2
	BCS OVER	;CHECK OVERFLOW
1$:	LSR Z,T2
	BNE 2$
3$:	RTS		;DONE
OVER:	LDA I,377	;SATURATE AT FF
	RTS
SHIFT:		;SHIFTS T0,T1 RIGHT ACCORDING TO SPEED
			;DESTROYS T3,ACC
		;MUST BE ENTERED WITH JUMPS SET UP IN INDL1 AND INDL2
			;NO PAGE BOUNDARY ALLOWED AFTER SHL
	LDA I,0	;SET UP FILL DIGITS FOR NEGATIVE
	STA Z,T3
	LDA Z,T1

		;SHIFT T1 LEFT 8-Y TIMES

	JMP N,INDL1
	.IF NE,SHIFT+34.&177400-<.&177400> ;IF PAGE BOUNDARY WOULD OCCUR IN SH
	.=.&177400+400	;BUMP TO START OF NEXT PAGE
	.ENDC
SH10:	BPL 1$
	LSR
	ORA I,200
	BMI SH9
1$:	LSR
SH9:	BPL 1$
	LSR
	ORA I,200
	BMI SHST
1$:	LSR
	BPL SHST
SHL:	ASL
	ASL
	ASL
	ASL
	ASL
SHST:	STA Z,T0	;TO GENERATE T0
			;SHIFT T1 RIGHT Y TIMES

	LDA Z,T1
	BMI NEG
NEGR:	JMP N,INDL2
SHR:	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	ORA Z,T3
	STA Z,T1
	RTS
NEG:	LDY I,ONES-SHR&377
	LDA NY,INDL2
	STA Z,T3
	LDA Z,T1
	JMP NEGR
ONES:	.BYTE 377,376,374,370,360,340,300,200,0
J1:	.BYTE L,L,L,L,L+1,L+2,L+3,L+4,L+5,SH9&377,SH10&377
J2:	.BYTE R+5,R+5,R+5,R+5,R+4,R+3,R+2,R+1,R,R,R
ADDSPD:		;ADD STEP IN T0,T1 TO (X)
		;DESTROYS ACC
		;ENTERED WITH POSTBL ADD IN X
	CLC
	LDA ZX,0	
	ADC Z,T0
	STA ZX,0
	LDA Z,T1
ADDACC:		;ENTRY TO ADD STEP IN ACCUMULATOR
	BPL 1$	;RETURN CARRY SET FOR OVERFLOW
	ADC ZX,1
	STA ZX,1
	BCC 2$	;COMPLIMENT CARRY FOR T1 NEG
	CLC
	RTS
1$:		ADC ZX,1
	STA ZX,1
	RTS
2$:	SEC
	RTS
HSTP:	;RESOLVES SFHMOT INTO A STEP
	;ENTERED WITH SFMOT IN ACCUMULATOR
	;RETURNS PLUS OR MINUS ONE OR ZERO IN ACC PLUS POS INPUT
HSTP:	JSR STP
	ADC Z,HPD
	ADC Z,HPD
	RTS
VSTP:	JSR STP
	ADC Z,VPD
	ADC Z,VPD
	RTS
STP:	ASL
	AND I,20
	BEQ 2$
	BCC 1$
	LDA I,376	;-2 VELOCITY
2$:	CLC
	RTS
1$:	LDA I,2	;+2 VELOCITY
	BNE 2$
RFT:		;SET UP SPEED CODE FOR MOTION
		;ENTERED WITH ABSOLUTE SPEED IN ACC
		;RETURNS FRAME COUNT IN ACC
		;USES X
	.REPT 5
	LSR
	.ENDM
	TAX
	LDA AX,SPWD
	RTS
SPWD:	.BYTE 0,1,5,5,7,7,17,17
ADDS:		;ADDS SIGNED STEP IN ACC
		;TO SIGNED NUMBER IN ZX - NO ROLLOVER
		;CONDITION CODES SET BEFORE ENTRY
		;RETURNS CARRY SET FOR ATTEMPTED ROLLOVER
	CLC
	STA Z,T0	;SAVE STEP
	BPL 3$
	LDA ZX,0
	BPL 1$
	ADC Z,T0
	BMI 2$
	SEC
	RTS
1$:	ADC Z,T0
2$:	STA ZX,0
	CLC
	RTS
3$:	LDA ZX,0
	BMI 1$
	ADC Z,T0
	BPL 2$
	SEC
	RTS
MOVOUT:		;INCREMENT (X+1) AWAY FROM CENTER
			;NO WRAPAROUND ALLOWED
	CLC
	LDA ZX,1
	BPL 1$
	ADC I,1	;STEP SIZE
	BCS 3$
2$:	STA ZX,1
3$:	RTS
1$:	ADC I,377
	BCS 2$
	RTS
RNUM:		;RETURN RANDOM NUMBER BETWEEN 40 AND BF
	LDA A,RDATA	;ADD 7 BITS OF RANDOM NUMBER
	LSR
	ADC I,100
	CMP I,200	;80 NOT ALLOWED
	BEQ RNUM
	RTS
	.SBTTL SCORING ROUTINES
SCROUT:	;SCORE OUTPUT
		;LEVEL 2 SUBROUTINE
	CLC
	LDX I,SCORE
	JSR DIGSU
	JMP PRINTS
DIGSU:	LDA ZX,0	;SET UP DIGITS
	BEQ 2$
	AND I,17	;LOWER DIGIT
	ADC I,60
	STA Z,TEMP+1
	LDA ZX,0
	LSR	;UPPER DIGIT
	LSR
	LSR
	LSR
	CLC
	BNE 1$	;LEADING ZERO SUPPRESS
	LDA I,360
1$:		ADC I,60
	STA Z,TEMP	;END DIGIT
3$:	LDA ZX,1
	AND I,17
	CLC
	ADC I,60
	STA Z,TEMP+3
	LDA ZX,1
	.REPT 4
	LSR
	.ENDM
	CLC
	ADC I,60
	STA Z,TEMP+2
	LDA I,0
	STA Z,TEMP+4
	RTS
2$:	LDA I,40	;SUPPRESS TWO ZEROES
	STA Z,TEMP
	STA Z,TEMP+1
	BNE 3$

PRINTS:	PRINT SCRMES,40

	PRINT TEMP,50
	RTS

SCRMES:	.ASCIZ/ SCORE:/

	;GAME ANALYSIS
HISSCR:		;DISPLAY ALIEN SCORE
	PRINT ANALY,60
	LDA Z,SCA
	CMP Z,SCORE
	BEQ 1$
	BCC 1$
	PRINT LOST,151
2$:	LDX I,SCA-1
	JSR DIGSU
	PRINT TEMP+3,70
	RTS
1$:	PRINT WON,151
	JMP 2$
ANALY:	.ASCII/CRASHES:/	
	.BYTE 15,15
	.ASCIZ/ YOU HAVE/
WON:	.ASCIZ/ SAVED THE FEDERATION!/
  LOST:	.ASCIZ/ LOST EVERYTHING/
	;DISPLAY POINT VALUE MESSAGE
POINTS:	LDX I,T0
	JSR DIGSU
	PRINT TEMP,350
	PRINT POI,360
	WAIT 4,20
	PRINT NULL,340	;CLEAR DISPLAY
	RTS
POI:	.ASCIZ/POINTS!/
NULL:	.BYTE 40,0
	.SBTTL PRINT ROUTINES
	;NEWMES - OUTPUTS MESSAGE AT LOCATION (X) ON SCREEN
	;	ADDMES - OUTPUTS MESSAGE ON NEXT LINE OF SCREEN
	;	MESSAGE LOCATION (INDLO),MSADR USED WITH X + Y, T3
	;	A CALLS FOR PRINT MACRO
CLRMES:	LDX I,000
	STX Z,MSADR
	LDA I,1
	STA A,MUX
	LDA I,0
2$:	STA AX,ANRAM
	INX
	BNE 2$
	STA A,MUX
	RTS
	;*******ADD A MESSAGE POINTED TO BY INDL0,X HAS ADDR OF OUTPUT
	;****LINES 0-7 START AT X = 0,40,100,140,200,240,300,340
NEWMES:	LDY I,000
1$:	LDA I,1
	STA A,MUX
NWMSA:	LDA NY,INDLO
	BNE 3$
	STX Z,MSADR	;CHECK EOT
	JMP ENDLIN
3$:	INY
	CMP I,015
	BNE NXCHAR
NXLIN:	JSR ENDLIN
	JMP NEWMES+2
NXCHAR:	STA AX,ANRAM
	INX
	BNE NWMSA
ADDMES:	LDY I,000	;ADD A LINE - SO SWEET
	LDA Z,MSADR
	TAX
	AND I,340	;CHECK IF AT BEGINNING OF LINE
	BEQ NEWMES
	CLC
	ADC I,040
	TAX
	JMP NEWMES+2
ENDLIN:	TXA	;CLEAR TO END OF LINE
	AND I,037
	EOR I,037
	STA Z,T3
	LDA I,040
1$:	STA AX,ANRAM
	INX
	DEC Z,T3
	BPL 1$
	LDA I,0
	STA A,MUX
	RTS
	.SBTTL PROGRAM INITIALIZE AND GAME CONTROL 
ENDGAM:	;GAME OVER
	LDA I,1	;DEGLITCH
	STA Z,FC
	LDA Z,DONTIM	;HOW LONG SINCE GAME PLAYED BEFORE?
	CMP I,30
	BMI 1$
	PRINT HUSTLE,240
1$:	LDA I,0
	STA Z,DONTIM
	STA Z,AUDFLG
	STA Z,FLAG
	JSR SCROUT
	JSR HISSCR
	WAIT 2,100
	JMP END
HUSTLE:	.ASCII/ SENSORS DETECT ANOTHER QUARTER/
		.BYTE 15,15
	.ASCIZ/ IN YOUR POCKET   TRY AGAIN!/
RESET:	LDA I,0
	LDX I,377
	TXS
1$:	STA ZX,0
	DEX
	BNE 1$
	LDA A,20001	;CHECK IF DIAGNOSTIC PRESENT
	CMP I,330
	BNE 2$
	JMP 20001	;IF IT IS
2$:	JSR CLRMES
END:	LDA Z,GAMTIM	;DON'T RESET IF GAME STARTED
	BEQ 2$
	RTS
2$:	LDX I,377	;SET UP STACK
	TXS
	JSR SPEEDI		;SET UP INDIRECT FOR SHIFT
	LDA I,SHL&177400/400
	STA Z,INDL1+1
	STA Z,INDL2+1
	LDA I,370	;SHIP OFF
	STA Z,SHVPOS+1
	JSR CLRMES
	JSR SCROUT
	JSR HISSCR
	LDA I,0
	LDX I,17
1$:	STA AX,156000
	STA AX,136400
	STA AX,137000
	STA ZX,TIMERS
	DEX
	CPX I,2
	BPL 1$
	LDA I,1
	STA A,AUDOUT	;AUDIO OFF
CHCK:	LDA I,40	;ATTRACT STEERING CODES
	STA Z,ROLLW
	STA Z,PITCHW
	LDA Z,CREDIT	;CHECK CREDIT
	AND I,376
	BEQ 1$
	PRINT CRMES,240
	JMP MAIN
1$:	PRINT ATRMES,240
	LDA Z,FLAG
	BMI 2$
	JSR WHOF
2$:	JMP MAIN
CRMES:	.ASCII/ YOU ARE IN COMMAND/
	.BYTE 15,15
	.ASCIZ/ PRESS START FOR NEXT MISSION/
ATRMES:	.ASCII/ DEPOSIT COIN TO BE/
	.BYTE 15,15
	.ASCIZ/ CAPTAIN OF STARSHIP ATARI/
STRTSS:		;START SWITCH SERVICE
		;LEVEL 1 SUBROUTINE
	LDA Z,GAMTIM
	BEQ AC
	RTS
AC:	LDA A,COLLAT	;CHECK LINE FREQ
	BMI AC	;WAIT FOR AC LOW
	LDX I,140.
2$:	LDA A,COLLAT	;WAIT FOR AC HI
	BMI 3$
	LDA I,2	;100 US DELAY
	JSR DELAY
	DEX
	BEQ 1$	;WIRED LOW
	BNE 2$
3$:	LDA I,21	;IN 9 MS IS AC LO?
	JSR DELAY
	LDA A,COLLAT
	BMI 4$	;50 HZ
1$:	DEC Z,CREDIT
	DEC Z,CREDIT
	BIC 1,CREDIT
4$:	LDA I,0
	STA Z,SCORE
	STA Z,SCORE+1
	STA Z,SCA
	TAY	;SET Y FOR SHOW 1
	STA A,KICKER
	STA A,TIMPOT
	JSR CLRMES
	LDA I,3
	JSR DELAY
	LDA A,SYNC	;GET GAME TIMER
	AND I,77
	LSR
	LSR
	CLC
	ADC I,17
	STA Z,GAML	;LENGTH OF GAME
	STA Z,GAMEC
	LDA I,140	;INITIAL GAME TIMER
	STA Z,GAMTIM
10$:	LDA I,5	;NO OF PHOTON TORPEDOES (ODD NO)
	STA Z,PTLEFT
	STA A,KICKER
	STA Z,WHTIM
	BIS 2,FLAG
	JMP RESSHP
TIMOUT:	;GAME TIMED OUT
		;LEVEL 1 ROUTINE
	LDA Z,SCORE
	CMP I,65	;BONUS SCORE LEVEL
	BPL 2$
1$:	JSR SCROUT
	JMP ENDGAM
2$:	LDA A,SWA	;CHECK BONUS SWITCH
	AND I,40
	BEQ 1$
	LDA Z,FLAG
	AND I,10
	BNE 1$	;RETURN IF ALREADY IN BONUS TIME
	BIS 10,FLAG	;SET HYPERSPACE FLAG AND BONUS
	LDA I,0
	STA A,HYPSPC
	PRINT BONMSG,240
	LDA I,40	;BONUS TIME
	STA Z,GAMTIM
	RTS
BONMSG:	.ASCIZ/ BONUS TIME IN HYPERSPACE/
	.SBTTL EVERY SO OFTEN
ESO:			;EVERY SO OFTEN CONTROLLER
			;MAIN LEVEL 0
	LDA Z,FC
	AND I,7
	BNE 1$
	LDA Z,GAMTIM
	BNE 5$
	LDA Z,FC
	BNE 4$
	INC Z,DONTIM
	LDA Z,DONTIM	;LESS OFTEN
	AND I,3
	BNE 4$
	LDA I,0	;ATTRACT SPEED CODES
	STA Z,HPD
	STA Z,VPD
	JMP END
5$:	JSR COMSHS	;EVERY 16 FRAMES FOR EACH SHIP
	JMP MAIN
1$:	AND I,3
	CMP I,1
	BNE 2$
	.IIF EQ,.&1,NOP
	JSR AUDIO
	JMP MAIN	;EVERY 4 FRAMES DO AUDIO
2$:	CMP I,2
	BNE 3$
	JSR SWPROC	;EVERY 4 FRAMES DO SWITCHES
	JMP MAIN
3$:	CMP I,3
	BNE 4$
	JSR TIMSER	;EVERY 4 FRAMES DO TIMERS
4$:	LDA Z,CREDIT	;CREDIT LIGHT
	AND I,36
	BEQ 7$
	LDA I,0
	BEQ 6$
7$:	LDA I,1
6$:	STA A,CRLITE
	JMP MAIN
	.SBTTL TIMER ROUTINES
TIME:	;SET UP TIMER POINTED TO BY X
		;WITH RETURN ADDRESS AND TIME
		;4XFRAMES TO GO PASSED IN ACCUM
		;JUMPS TO MAIN LOOP WHEN DONE
	;RETURNS WHEN TIMED OUT - LEVEL 1 SUBROUTINE
	STA ZX,TIMERS	;STORE TIME
	PLA
	STA ZX,TIMERS+1
	PLA
	STA ZX,TIMERS+2
	RTS	;RETURN TO LEVEL 0
TIMSER:		;TIMER SERVICE EVERY FOURTH FRAME
		;LEVEL 1 SUBROUTINE
	LDA Z,PHTIM	;PHASORS FIRST FOR ACCURACY
	BEQ 5$
	DEC Z,PHTIM
	BNE 21$
	JMP PHOFF
5$:	LDA Z,TIMERS+3
	BNE 21$
	BIC 16,AUDFLG
21$:	DEC Z,GAMEC
	BNE 4$
	LDA Z,GAML
	STA Z,GAMEC
	LDA Z,GAMTIM	;GAME TIMER
	BEQ 4$
	SED
	SEC
	SBC I,1
	STA Z,GAMTIM
	CLD
	BNE 4$	;GAME OVER IF BUMPED TO ZERO
	JMP TIMOUT
4$:	LDX I,11
1$:	LDA ZX,TIMERS
	BEQ 2$	;LEAVE ALONE IF ZERO
	DEC ZX,TIMERS	;DEC EACH TIMER
	BEQ 3$
2$:	DEX
	DEX
	DEX
	BPL 1$
	LDA Z,WHTIM	;WHISH SOUND
	BEQ 9$
	DEC Z,WHTIM
20$:	LDA Z,HITTIM
	BEQ 6$
	DEC Z,HITTIM
	BNE 6$
	LDY I,0
	JMP HITOF
6$:	LDA Z,HITTIM+DIFF	;SHIP 2 HIT TIMER
	BEQ 12$
	DEC Z,HITTIM+DIFF
	BNE 12$
	LDY I,DIFF
	JMP HITOF
12$:	LDA Z,PETIM	;A FIX
	BNE 8$
	BIC 40,AUDFLG
	RTS
8$:	LDA Z,PETIM
	BEQ 15$
	DEC Z,PETIM
	BNE 16$
	JMP EXLP2
16$:	JMP EXLP
15$:	BIC 40,AUDFLG
	BIC 4,FLAG
	LSR
	AND I,4
	ORA Z,FLAG
	STA Z,FLAG
	RTS
9$:	LDA Z,TIMERS+11	;DON'T LET CIRCLE GET LOST
	BNE 20$
	LDA Z,FLAG
	BMI 20$
	JMP WHOF
3$:	LDA ZX,TIMERS+2
	PHA
	LDA ZX,TIMERS+1
	PHA
	RTS	;JUMP TO CALLING ROUTINE
	.SBTTL SWITCH SCANNER
SWPROC:		;SWITCH PROCESSOR - NO DEBOUNCE
		;SUBROUTINE LEVEL 1
	LDA A,SWA	;GET SWITCHES
	STA Z,T0
	BIT A,SYNC	;TEST SWITCH?
	BVS 8$
	JMP RAMTST
8$:	LDA Z,FC	;ON ALTERNATE FRAMES
	AND I,1
	BNE 7$
	LDA I,4	;CHECK HIT FOR SHIP 1
	BIT Z,COL
	BEQ 7$
	LDA Z,AUDFLG	;HIT ONLY WHEN EXPLODING
	AND I,14	;UNLESS PHOTOR ON
	BEQ 7$
	LDY I,0
	JMP HIT
7$:	LDA I,4	;CHECK HIT FOR SHIP 2
	BIT Z,COL+DIFF
	BEQ 1$
	LDA Z,AUDFLG
	AND I,14
	BEQ 1$
	LDY I,DIFF
	JMP HIT
1$:	LDA Z,FLAG	;CHECK CIRCLE
	AND I,40
	BEQ 5$
	LDA Z,COL
	AND I,1
	BNE 5$
	JMP WHOF
5$:	LDA Z,CREDIT	;CHECK START
	AND I,76	;AT LEAST 2 CREDITS
	BEQ 2$
	LDA I,10
	BIT Z,T0
	BNE 2$
	JMP STRTSS
2$:	LDA Z,GAMTIM
	BNE 3$	;DON'T CHECK SW IN ATTRACT
	RTS
3$:	LDA Z,AUDFLG
	AND I,6
	BNE 6$
	LDA I,4
	BIT Z,T0
	BNE 4$
	JMP PHTOR	;FIRE PHOTON TORPEDOES
4$:	LSR	;PLACE TO HANDLE SW1 HERE
	LSR
	BIT Z,T0
	BNE 6$
	JMP PHASOR	;FIRE PHASORS
6$:	RTS
	.SBTTL SHIP RESET & HIT
RESSHP:		;LEVEL 1 MAIN ROUTINE
		;Y SHOULD BE SET TO 0 OR DIFF
	LDA I,377	;SHIP OFF
	STA AY,SHRES
	STA AY,SHMOFL
	LDA Z,GAMTIM
	BNE 15$
	RTS
15$:	TYA
	BNE 10$
	LDX I,0	;USE TIMER 1
			;SHIP 1 OFF FLAG
	LSR Z,FLAG
	ASL Z,FLAG
	JMP 3$
10$:	BIC 20,FLAG	;SHIP 2 OFF
	LDX I,6	;USE TIMER 3
3$:	LDA ZX,TIMERS	;RESET ALREADY IN DELAY
	BEQ 14$
	RTS	;YES
14$:	LDA A,RDATA	;SHORT DELAY BEFORE SHIP COMES OUT
	AND I,17
	ADC I,6
	JSR TIME
	LDA Z,AUDFLG
	AND I,40
	BEQ 2$
	LDA I,20	;DELAY AFTER PLAYER HIT
	JSR TIME
2$:	TXA	;RESTORE Y DEPENDING ON WHICH TIMER CAME IN
	TAY
	BEQ 20$
	LDY I,DIFF
20$:	JSR RNUM	;RANDOM RESET OF SHIP
	NOP
	STA AY,SHHPOS+1
	JSR RNUM
	STA AY,SHVPOS+1
	LDA Z,SCORE	;GIVE A TUG FIRST
	BNE 4$
	LDA I,7	;TUG
	BNE 5$	;JUMP
6$:	LDA I,2	;SPACE MONSTER
	BNE 30$
4$:	LDA A,RDATA
	AND I,37	;SHALL WE GIVE A MONSTER?
	BEQ 6$	;YES
	LSR	;RDATA INTO CARRY
	LDA AY,SHIPID
	ADC I,1
	AND I,3
	CMP I,2
	BEQ 4$
5$:	STA AY,SHIPID
	.REPT 5
	ASL
	.ENDM
	ORA AY,SHIPID
30$:	STA AY,SHIPID
	LDA I,0
	STA A,156000	;SHIP MODULATION OFF
	STA AY,SHMOFL
	LDA I,3	;MAY WRAP OVER BACKWARDS
	LDA AY,SHIPID
	STA Z,T1
	BIT Z,T1
	LDA I,5	;MINIMUM SIZE
	BVC 1$
	LDA I,200	;SET UP TUGS
	STA AY,SHHPOS+1
	LDA I,60
1$:	STA AY,SHSIZE
	TYA
	BNE 13$
	BIS 1,FLAG
	RTS
13$:	BIS 20,FLAG
	RTS
	;HIT DETECTED ON SHIP
HIT:	LDA AY,HITTIM
	BEQ 1$
	RTS
1$:	TYA
	BNE 2$
	LDA A,AUDFLG
	ORA I,20
3$:	AND I,371	;CANCEL ARMS
	STA Z,AUDFLG
	LDA I,17
	STA AY,HITTIM
	LDA AY,SHIPID
	ASL
	AND I,6
	TAX
	LDA AX,VALUE	;LOWER DIGITS
	STA Z,T1
	SED
	CLC
	ADC Z,SCORE+1
	STA Z,SCORE+1
	LDA AX,VALUE+1	;UPPER DIGITS
	STA Z,T0
	ADC Z,SCORE
	BCS 4$
	STA Z,SCORE
4$:	CLD
	JSR POINTS
	JSR SCROUT	;SCORE
	RTS
2$:	LDA Z,AUDFLG	;SHIP 2 EXPLODING
	ORA I,100
	JMP 3$
HITOF:		;HIT ON SHIP TIMEOUT
	LDA I,0
	STA AY,HITTIM	;EXPLOSION OFF
	TYA
	BNE 1$
	BIC 20,AUDFLG	;SHIP 1
	JMP RESSHP
1$:	BIC 100,AUDFLG	;SHIP 2
	JMP RESSHP
VALUE:	.BYTE 0,2,0,1,0,5,120,0	;VALUE OF SHIPS
	.SBTTL PLANET MOTION
PLAMOT:		;PLANET MOTION CONTROL
		;BIT 7 OF FLAG MUST BE ON
		;BIT 5 INDICATES CIRCLE KILL
		;LEVEL 1 SUBROUTINE - PARALLELS MOVAST
	LDX I,CHPOSB
	LDA I,40
	BIT Z,AUDFLG
	BNE 1$
	BIT Z,FLAG
	BPL 1$
	BEQ 4$	;CIRCLE KILL?
	JMP KILCIR
4$:	LDA Z,AUDFLG	;PHOTON TORPEDO?
	AND I,4
	BEQ 2$
	JMP WHOF
1$:	RTS	;PLANET OFF
2$:	LDA Z,GAMTIM
	BEQ 10$
	LDA Z,SCORE	;REFLEX WITH PLANET
	LSR	;SET UP INDIRECT
	LSR
	LSR
	LSR
10$:	CLC
	ADC I,5	;HIGHER FOR SLOWER EXPAND (HARDER GAME)
	CMP I,12
	BCC 3$
	LDA I,12
3$:	TAX
	LDA AX,J1	;REFLEX EXPAND
	STA Z,INDL1
	LDA AX,J2
	STA Z,INDL2
	LDX I,CHPOSB
	JSR EXPAND	;MOVE AWAY FROM CENTER
	BCC 6$
	JMP CIROFF	;MOVED OFF
6$:	LDA Z,SFHMOT
	JSR HSTP
	CLC
	JSR ADDACC	;ADD STARFIELD MOTION
	BCC PLV
	JMP CIROFF
PLV:	LDX I,CVPOSB	;VERTICAL
	JSR EXPAND
	BCC 1$
	JMP CIROFF
1$:	LDA Z,SFVMOT
	JSR VSTP
	CLC
	JSR ADDACC
	BCC PLG
	EOR I,377
	STA ZX,1
	JMP CIROFF
PLG:	LDA Z,CSIZB+1	;IF SMALL
	CMP I,60	;MAKE PLANET VISIBLE
	BCS 4$
	LDA Z,COL
	AND I,1
	BNE 4$
	LDA I,2
	ADC Z,CSIZB+1
	STA Z,CSIZB+1
	RTS
4$:	LDA Z,CTIM	;PLANET GROWTH BASED ON TIMER CTIM
	LSR
	LSR
	LSR
	AND I,36
	CLC
	TAX
	LDA AX,GROW
	STA Z,T0
	LDA AX,GROW+1
	STA Z,T1
	INC Z,CTIM
	ASL Z,T0	;MSB
	ROL Z,T1	;CARRY FROM LAST ASL
	ASL Z,T0	;FASTER GROWTH
	ROL Z,T1
	LDX I,CSIZB
	JSR ADDSPD	;ADD T0,T1 TO CSIZE
	BCC 2$
	JMP CIRFS	;CIRCLE FULL SIZE
2$:	RTS
	.BYTE 12		;DUMMY BYTE
	.EVEN
GROW:	.WORD 25.,32.,45.,79.,160.,300.,520.,750.
	.WORD 1000.,1400.,1700.,2500.,3000.,3700.,4500.,4500.
KILCIR:		;MOVE CIRCLE OFF SCREEN
			;LEVEL 1 ALTERNATE TO PLH, PLV, PLG
	LDX I,CHPOSB
	JSR MOVOUT
	LDX I,CVPOSB
	JSR MOVOUT
	LDA Z,CSIZB+1	;MAKE CIRCLE SMALLER
	SEC
	SBC I,3
	BCC 1$
	STA Z,CSIZB+1
1$:	RTS
	.SBTTL SHIP CONTROL
COMSHS:		;SET UP SHIP SPEED CODES
		;DONE EVERY 1/2 SECOND
		;LEVEL 1 SUBROUTINE
	LDY I,0	;SET Y FOR WHICH SHIP
	LDA Z,FC
	AND I,10
	BNE 4$
	LDY I,DIFF
4$:	LDA Z,FLAG	;FIX FOR DISAPPEARING SHIP
	AND I,1
	BNE 6$
	LDA Z,TIMERS	;CHECK SHIP TIMER
	BNE 6$
	LDY I,0
	JMP RESSHP
6$:	LDA Z,FLAG
	AND I,20
	BNE 5$
	LDA Z,TIMERS+6
	BNE 5$
	LDY I,DIFF
	JMP RESSHP
5$:	LDA Z,SPEEDW	;CLOSING RATE
	ASL
	ORA I,200
	STA Z,T1
	LDA AY,SHSIZE
	STA Z,T2
	JSR MULT
	STA AY,CLOSRT
	LDA AY,SHIPID	;IS IT A TUG?
	AND I,100
	BEQ COMSHH
	LDA I,0	;TUG
	STA AY,CLOSRT
	STA AY,RELMOV
	LDA I,100	;TUG SPEED
	STA AY,RELMOH

	RTS
COMSHH:	LDA Z,FC
	AND I,360
		;NEW ACCELERATION EVERY 4 SEC
	BNE 1$
4$:	LDA A,RDATA
	STA AY,SHACC	;COUPLE IN SHIP DIRECTION LATER
1$:	TYA
	CLC
	ADC I,RELMOH
	TAX
	LDA AY,SHACC 	;H ACCELERATION FROM BITS 0-3
	ASL
	ASL
	ASL
	ASL
	JSR ADDS	;ADD STEP NO ROLLOVER
	BCS 4$
	TYA
	CLC
	ADC I,RELMOV
	TAX
	LDA AY,SHACC	;BUILD 3 BIT+SIGN V. ACC.
	JSR ASR
3$:	JSR ADDS
	BCS 4$
	RTS
ASR:		;UTILITY RIGHT SHIFT ARITHMETIC
	ORA I,0
	BMI 1$
	LSR
	RTS
1$:	LSR
	ORA I,200
	RTS
	.SBTTL ARMAMENTS
PHASOR:		;FIRE PHASORS
		;LEVEL 1 SUBROUTINE
	LDA Z,PHTIM	;FIX PHASOR TIMER
	BNE 1$
	LDA Z,AUDFLG
	AND I,10
	BNE 1$
	LDA I,10	;MAKE THIS 14 FOR SLOWER PHASOR
	STA Z,PHTIM
	LDA I,205	;PHASOR MOVER
	STA Z,HPOSTBL+33
	LDA I,337
	STA Z,VPOSTBL+33
	LDA I,4
	STA Z,PICTBL+15
	BIS 2,AUDFLG
	LDA I,1
	STA A,157001	;PHASOR ON
1$:	RTS
PHOFF:		LDA I,0
	STA A,157001	;PHASOR OFF
	LDA Z,AUDFLG
	AND I,10
	BNE 1$
	BIS 10,AUDFLG
	LDA I,16
	STA Z,PICTBL+15
	LDA I,3	;LENGTH OF EXPLOSION
	STA Z,PHTIM
	RTS
1$:	BIC 12,AUDFLG
	RTS
PHTOR:		;FIRE PHOTON TORPEDO
	LDA Z,AUDFLG	;ON ALREADY?
	AND I,4
	BEQ 1$
	RTS
1$:	PRINT PT,140
	LDA Z,PTLEFT	;ANY TORPEDOES LEFT?
	BEQ 2$
	DEC Z,PTLEFT
	BIS 4,AUDFLG
2$:	LDA Z,PTLEFT	;PRINT HOW MANY LEFT
	CLC
	ADC I,60
	STA Z,T0
	LDA I,0
	STA Z,T1
	PRINT T0,164
	LDA I,4
	BIT Z,AUDFLG	;FIRE?
	BNE 3$
	RTS
3$:	WAIT 2,2
	BIS 4,FLAG	;HYPERSPACE
	WAIT 2,2
	BIC 4,FLAG
	WAIT 2,1
	BIS 4,FLAG
	WAIT 2,2
	BIC 4,FLAG
	LSR
	AND I,0
	ORA Z,FLAG
	STA Z,FLAG
	LDY I,0
	JSR HIT
	LDY I,DIFF
	JMP HIT
PT:	.ASCIZ/ TORPEDOES LEFT:/
PTMOT:	;MOVE STAR 13 FOR PHASOR OR TORPEDO
		;LEVEL 1 SUBROUTINE
	LDA Z,AUDFLG
	AND I,10
	BNE 6$
	LDA Z,AUDFLG
	AND I,6
	BNE 1$
4$:	LDA I,374
	STA Z,VPOSTBL+33
3$:	RTS
6$:	LDA I,7	;ALTERNATE EXPLOSION PICTURES
	BIT Z,FC
	BNE 3$
	EOR Z,PICTBL+15
	STA Z,PICTBL+15
	RTS
1$:	DEC Z,VPOSTBL+33
	DEC Z,VPOSTBL+33	;NOP FOR SLOWER PHASOR
	DEC Z,VPOSTBL+33
	RTS
	.SBTTL COIN INTERRUPT
COIN:		;INTERRUPT LEVEL HANDLER
	SEI
	CLD
	PLA	;GET STATUS
	STA Z,TEMP
	PHA
	PHA	;SAVE ACC
	LDA Z,TEMP	;CHECK FOR ILLEGAL BRK
	AND I,20
	BEQ 6$
	JMP END
10$:	LDX I,377
8$:	LDA I,20
	JSR DELAY
	WDOG
	DEX
	BNE 8$
	LDA A,SWA
	CMP I,277
	BNE 9$
	PRINT HIR,200
	LDA I,20
	STA Z,CREDIT
	JMP 1$
6$:	LDA Z,T0	;SAVE T0
	PHA
	LDA I,77	;15 MS DELAY
	JSR DELAY
	WDOG
	LDA A,SWA
	CMP I,166
	BEQ 10$
	AND I,220	;ANY COINS?
	STA Z,T2
	EOR I,220
	BEQ 1$
	CMP I,220	;2 COINS?
	BNE 9$
	JSR 97$	;YES - DOUBLE CREDIT
9$:	LDA I,24	;MAXIMUM CREDIT ALLOWED
	CMP Z,CREDIT
	BMI 4$
	JSR 97$
	JMP 4$
97$:	LDA A,COLLAT	;HOW MANY CREDITS PER COIN?
	AND I,160
	LSR4
	CLC
	ADC Z,CREDIT	;CREDIT
	STA Z,CREDIT
	RTS
4$:	LDA I,130	;STUCK SWITCH CHECK
	JSR DELAY
	WDOG
2$:	LDA A,SYNC
	BPL 2$
	LDA A,SWA
	AND I,220
	CMP Z,T2
	BEQ 5$
	JSR CLRMES
	JMP 1$
5$:	PRINT STKSW,40	;STICK SWITCH
	WDOG
	JMP 2$
1$:	PLA	;REPLACE T0
	STA Z,T0
	LDA Z,GAMTIM
	BNE 3$
	LDA Z,CREDIT	;AT LEAST 2 CREDITS FOR MESSAGE
	AND I,376
	BEQ 3$
	PRINT NEWCOI,240
	LDX I,377
	TXS	;RAPE STACK
	CLI
	JMP MAIN
3$:	PLA	;BACK TO GAME
	CLI
	RTI
NEWCOI:	.ASCII/ YOU ARE NOW IN COMMAND/
	.BYTE 15,15
	.ASCIZ/ PRESS START TO BEGIN MISSION/
STKSW:	.ASCIZ/ COIN/
DELAY:	STA Z,T0
1$:	DEC Z,T0
	BNE 1$
	SEC
	SBC I,1
	BNE DELAY
	RTS
	.SBTTL CIRCLE CONTROL AND PLAYER HIT
		;CIRCLE OFF ENTRY
CIROFF:	EOR I,377	;NO ROLLOVER
	STA ZX,1
	LDA Z,FLAG
	AND I,200
	BEQ 1$
	LDA I,0
	STA Z,TIMERS+6	;CLEAR TIMER 3
	LDA I,1
	BIT Z,COL
	BEQ WHOF
	BIS 40,FLAG	;SET KILL FLAG
2$:	LDA Z,WHTIM
	BNE 1$
	LDA I,10
	STA Z,WHTIM	;START WHISH
1$:	RTS
WHOF:	LDA I,0	;CIRCLE OFF
	STA Z,CTIM
	STA Z,CSIZB+1	;CIRCLE CONTROL LOOP
	BIC 340,FLAG
	LDX I,11
	LDA A,RDATA
	AND I,17
	JSR TIME
	JSR RNUM	;PLANET RESET
	JSR ASR
	EOR I,100
	JSR ASR
	EOR I,100
	STA Z,CHPOSB+1
	LDA A,RDATA
	AND I,77
	BEQ 1$	;BLACKHOLE?
	LDA I,377
1$:	CLC	;YES!
	ADC I,1
	STA A,BLHOLE
	JSR RNUM
	JSR ASR
	EOR I,100
	STA Z,CVPOSB+1
2$:	BIS 300,FLAG
	RTS
CIRFS:		;CIRCLE REACHED FULL SIZE
	LDA Z,CHPOSB+1	;IN CENTER AREA?
	LSR
	EOR Z,CHPOSB+1
	AND I,100
	BEQ 1$
	LDA Z,GAMTIM
	BEQ 1$
	LDA Z,CVPOSB+1
	LSR
	EOR Z,CVPOSB+1
	AND I,100
	BEQ 1$	;CIRCLE ON SCREEN-CRASH
	JMP PLEXP
1$:	LDA I,14
	STA Z,WHTIM	;START
	LDA I,375	;PUT CIRCLE BIG AFTER ROLLOVER
	STA Z,CSIZB+1
	BIS 40,FLAG	;KILL CIRCLE
	RTS
PLEXP:	LDA Z,GAMTIM
	BNE 3$
	JMP WHOF
3$:	BIS 40,AUDFLG	;PLAYER EXPLODES
			;AUDIO
	BIC 301,FLAG
	PRINT DAMMSG,040
	CLC	;CRASH SCORE
	SED
	LDA Z,SCA
	ADC I,1
	STA Z,SCA
	CLD
	LDA I,37	;EXPLODE TIME
	STA Z,PETIM
EXLP:	.REPT 5
	ASL
	.ENDM
	EOR I,360
	STA Z,CSIZB+1
	LDA I,200
	STA Z,CHPOSB+1
	STA Z,CVPOSB+1
	LDA Z,FLAG
	ORA I,200
	EOR I,4
	STA Z,FLAG
	RTS
EXLP2:	BIC 40,AUDFLG	;AUDIO OFF
	BIC 204,FLAG
	LSR		;CHECK IF IN BONUS
	AND I,0		;AND PUT IN HYPERSPACE
	ORA Z,FLAG
	STA Z,FLAG
	STA Z,SPEEDW	;SPEED KILL
	STA Z,OLDSPD	;KILL OLDSPD IN AUDIO
	JSR SCROUT
	JMP WHOF
DAMMSG:	.ASCIZ/ CRASH! DAMAGE!   /
	.PAGE
	.SBTTL AUDIO
AUDIO:	LDA Z,GAMTIM	;CHECK ATTRACT
	BNE NOISE
	LDA I,1
	STA A,AUDOUT
	RTS
NOISE:	LDA I,0
	STA A,AUDOUT	;ATTRACT
	LDA Z,AUDFLG
	ASL
	ASL
	LDX I,DIFF	;SHIP 2 EXPLODING?
	BCS 3$
	ASL
	BCS 2$
	ASL
	LDX I,0
	BCS 3$
	ASL
	BCS 4$
	LDA I,0
	STA A,AUDOUT+6	;WHISH
	LDA Z,WHTIM
	BEQ 1$
	AND I,10
	BEQ 5$
	LDA Z,WHTIM
	EOR I,17
1$:	ASL
	NOP
	ASL
	ASL
	ASL
	ASL
	EOR I,377
	STA A,DAC+2
	JMP TONE
5$:	LDA Z,WHTIM
	JMP 1$
2$:	LDA I,1	;PLAYER EXPLODING
	STA A,AUDOUT+6
	LDA Z,PETIM
	BNE 1$+3
3$:	LDA ZX,HITTIM
	STA A,AUDOUT+6	;SHIP EXPLODING
	LDA ZX,HITTIM
	BNE 1$+2
	NOP
	NOP
4$:	LDA Z,FC
	STA A,AUDOUT+6	;SMALL EXPLOSION
	EOR I,377
	AND I,37
	BNE 1$+3
	.PAGE
TONE:	LDA I,4
	STA Z,T1
	BIT Z,AUDFLG
	BNE 2$	;PHOTONS
	BIT Z,SHSIZE
	BMI 3$
	BIT Z,SHSIZE+DIFF
	BPL 4$
3$:	LDA Z,FC	;KLAXON
	AND I,37
	CMP I,4
	BPL 6$
	LDX I,0
	BEQ TONLVL
6$:	LDX I,2
	BNE TONLVL
2$:	LDA Z,PTVPOS	;PHOTON TORPEDO
	BPL 4$
	LSR
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA I,4
	BIT Z,FC
	BNE TONLVL
	LDA I,20
	NOP
	NOP
	JMP TONLVL
4$:	LDX I,1	;BACKGROUND BLEEPS
	LDA Z,FC
	AND I,160
	CMP I,20
	BEQ 5$
	DEX
5$:	LDA A,RDATA
TONLVL:	STA A,DAC+3	;FREQUENCY
	TXA
	STA A,AUDOUT+3	;AMPLITUDE
	LSR
	STA A,AUDOUT+4
	.PAGE
MOTOR:	LDA Z,SPEEDW
	SEC
	SBC Z,OLDSPD
	BPL 1$
	DEC Z,OLDSPD
	DEC Z,OLDSPD
	EOR I,377
1$:	INC Z,OLDSPD
	CMP I,1
	BMI 3$	;LOW VOLUME
	LDA I,0
2$:	STA A,AUDOUT+5
	LDA Z,OLDSPD
	ASL
	EOR I,377
	STA A,DAC+4
	RTS
3$:	LDA I,1
	BNE 2$
	.PAGE
	.SBTTL SELF TEST
	JSR CLRMES
RAMTST:	LDX I,377	;RAM TEST
	TXA
1$:	STA ZX,0
	CMP ZX,0
	BNE BADRAM
	EOR I,377
	STA ZX,0
	CMP ZX,0
	BNE BADRAM
	DEX
	BNE 1$
ROM:	LDA I,0
	STA Z,INDLO
	TAX
	STX Z,T1
	LDA I,54
	STA Z,INDHI	;SET UP INDIRECT
1$:	LDA I,4
	STA Z,T2
	LDA I,0
	STA Z,T0	;T0=CHECKSUM
	TAY
2$:	LDA NY,INDLO
	CLC
	ADC Z,T0
	STA Z,T0
	INY
	BNE 2$
	INC Z,INDHI
	DEC Z,T2
	BNE 2$
	LDA Z,T0	;CHECKSUM COMPUTED
	CMP AX,CHSUM
	BNE BADROM
	INX
	STX Z,T1
	LDA Z,INDHI	;ALL DONE?
	CMP I,100
	BNE 1$		;NO
	JMP SWTEST	;YES
BADRAM:	PRINT BRAMMS,340
	AND I,17
	TAY
	LDA ZX,0
	AND I,17
	STA ZX,0
	TYA
	CMP ZX,0	;CHECK LOWER NIBBLE
	BNE 1$
	PRINT RAM0,370
	JMP ROM
1$:	PRINT RAM1,270
	JMP ROM
RAM0:	.ASCIZ/C1/
RAM1:	.ASCIZ/B1/
BRAMMS:	.ASCIZ/ BAD RAM LOCATION/
BADROM:	PRINT BROMMS,240
	LDA Z,T1
	ORA I,60
	STA Z,T0	;OUTPUT CKSUM INDEX TO SCREEN
	LDA I,0
	STA Z,T1
	PRINT T0,270
SWTEST:	LDA I,376
	STA A,AUDOUT	;AUDIO ON
	STA A,DAC+2	;NOISE OFF
	LDA A,SWA
	AND I,215
	EOR I,215
	BEQ BEEP
	LDA I,2
BEEP:	CLC
	ADC I,1
	STA A,AUDOUT+3
	LSR
	STA A,AUDOUT+4
	STA A,ROLIN	;ROLL POT
	LDA I,3
	JSR DELAY
	JSR WAITSYN
	LDA A,SYNC
	AND I,77
	STA Z,T1
	STA A,PTCHIN	;PITCH POT
	LDA I,3
	JSR DELAY
	LDA A,SYNC
	AND I,77
	ADC Z,T1
	STA Z,T1
	LDA A,SWA	;SPEED SWITCH
	AND I,100
	ADC Z,T1
	STA A,DAC+3
	BIT A,SYNC	;TEST SWITCH?
	WDOG
	BVC SWTEST
	JMP RESET
BROMMS:	.ASCIZ / BAD ROM/
HIR:	PHA
	EOR I,40
	JSR RDEC
	LSR A,HPOSTBL+11
	RTS
WAITSYN:	LDA A,SYNC
	BMI WAITSYN
1$:	LDA A,SYNC
	BPL 1$
	RTS
	.RADIX 16
CHSUM:	.BYTE 0A4,07E,0C6,04A,04,0CA
	.RADIX 8
	.REPT 37770-.
	.BYTE 0
	.ENDM
	.=37770
	.WORD RESET,RESET,RESET,COIN
	GAML = 243
	GAMEC = 244
	.END
                                                                                                                                                                                                                                                                                                       